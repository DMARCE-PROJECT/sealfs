.TH KPASS 1
.SH NAME
kpass \- SealFS keystream recreation
.SH SYNOPSIS
.BI kpass
.BI logfile
.BI kalpha
.BI kbeta
.SH DESCRIPTION
.I Kpass
can be used to completely recreate a keystream file: the file
.B kbeta,
which was identical to the original
.B kalpha
before burning. The file
.B kalpha
was derived from a user password (with the
.B -p
flag given to prep(1)). This recreated
.B kbeta
file can be used later for forensic analysis with verify(1).

.SH STATUS
Exit status is 0 if the keystream file was created successfully and greater than 0 otherwise.


.SH EXAMPLE
.EX
#in sealfs repository dir running as root
make
(cd tools/go/cmd/prep; go install ./...)
mkdir /tmp/xxx /tmp/yyy	#xxx is the backend, yyy is where the logs are generated
sudo insmod sealfs.ko
prep /tmp/xxx/.SEALFS.LOG /tmp/k1 -c 100000000
password:		#input password

sudo mount -o kpath=/tmp/k1,nratchet=5120 -t sealfs /tmp/xxx /tmp/yyy
#open files in yyy with append and write, rename them
echo 'log entry, I am running' >> /tmp/yyy/v.log
mv /tmp/yyy/v.log /tmp/yyy/v.log.1
#stop creating log entries
sudo umount /tmp/yyy
#forensic analysis, recreate k2
kpass /tmp/xxx/.SEALFS.LOG /tmp/k1 /tmp/k2
password:		#input password

verify /tmp/xxx /tmp/k1 /tmp/k2
.EE
.LP
.SH SOURCE
.B sealfs/tools/go/cmd/kpass

Only a go version of this command exists.
.SH SEE ALSO
prep(1), verify(1), sealfs(5)
.SH BUGS
.I Kpass
has no known bugs.
