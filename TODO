Burners are syncing with fsync is that working?
	check invariants on fsync



Better testing (important).
	Make sure keys are burnt until one offset
		rewrite a paranoid version of checkkeystreams in verify.c (verify -k)
	Reorder test has some problem, check and fix.



Write more efficiently (is it possible?)
	Do not insist on updating header so much when it is not needed.

Better tooling:


A) Solve being able to copy the files to another FS and verify (maybe continue working) elsewhere
	1) Either:
		//implemented, it is sufficient.
		rewrite log with different inodes
				rewritelog  .SEALFS_log .NEWSEALFS_log -2 3 -3 4 -5 650
		   do an ls -i on origin and destination and map by hand.

		////not implemented
			or brute force scan looking for start with entries which verify (simple for user, less versatile)
				verify -f /var/log/x
			or pass to verify -inode filename (good for scripting)
				verify -12 fich.log
B) Print log files in order (when checkjqueue advances)
with visible mark of whether they are wrong [OK][FAIL] and or color.


RATCHET:
	Add support for ratchet and mixed modes with reseeding.
	Implemented.
		1) Add extra ratchetIndex [0 to N-1] to sealfs_logfile_entry
		2) Only one readkey for each N ratchet index (N FACTOR of less reads, say 100)
			Keys are obtained chaining HMAC (ratchet hmac in sb)
			 	HMAC(B0, B16) -> Kx
				HMAC(Kx, 0) -> K0
				HMAC(K0, 1) -> K1
				HMAC(K_N-2, N-1) -> K_N-1
                                HMAC(B17, N)	 -> K_N
                                HMAC(K_N, N+1)	 -> K_N+1